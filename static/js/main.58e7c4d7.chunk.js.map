{"version":3,"sources":["Services/Cart/CartContext.js","Components/Cart/CartItem.js","Services/Cart/action-types.js","Components/Cart/CartList.js","Components/Products/Product.js","Services/Product/ProductContext.js","Services/Product/action-types.js","Components/Products/ProductList.js","Services/util.js","Services/Cart/reducer.js","Components/SortBy/SortBy.js","Services/Product/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","CartItem","cartObj","removeFromCart","className","alt","src","smallImage","productName","count","productPrice","onClick","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_CART_ITEM_COUNT","CheckoutButton","totalPrice","checkout","ShowCartItems","cartItem","length","map","items","id","CartList","closeCart","show","useContext","dispatch","useState","setTotalPrice","totalCartItems","setTotalCartItems","useEffect","totalAmount","totalCart","item","parseFloat","calculateTotal","isAddedtoCart","type","payload","alert","AddToCartButton","addToCart","productItem","Product","product","incrementItem","decrementItem","disabled","ProductContext","FETCH_PRODUCTS","ProductList","products","productDispatch","fetchProducts","a","Axios","get","headers","Authorization","data","photos","allProduct","photo","medium","tinyImage","tiny","random","word","commerce","price","datatype","uuid","age","number","console","log","undefined","color","state","action","filter","index","findIndex","x","slice","Object","assign","SortBy","sortValue","setSortValue","compare","lowestprice","b","parseInt","highestprice","value","onChange","ev","event","sort","target","selected","App","useReducer","CartReducer","ProductReducer","cartModal","setCartModal","reduce","accumalator","current","calculateCartItems","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e7c4d7.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const CartContext = createContext();","import React from \"react\";\r\nimport \"./css/CartItem.css\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nconst CartItem = ({ cartObj, removeFromCart }) => {\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <img alt=\"preview\" src={cartObj.smallImage} className=\"w-36 h-30 ml-0\" />\r\n      <div>\r\n        <p className=\"font-medium capitalize\">{cartObj.productName}</p>\r\n        <p>Quantity: {cartObj.count}</p>\r\n      </div>\r\n      <p className=\"text-green-700 font-medium\">â‚¹{cartObj.productPrice}</p>\r\n      <div className=\"absolute top-2 right-2\">\r\n        <button\r\n          onClick={() => removeFromCart(cartObj)}\r\n          className=\"focus:outline-none\"\r\n        >\r\n          <MdClose />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","export const ADD_CART_ITEM = \"ADD_CART_ITEM\";\r\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\r\nexport const UPDATE_CART_ITEM_COUNT= \"UPDATE_CART_ITEM_COUNT\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CartContext } from \"../../Services/Cart/CartContext\";\r\nimport CartItem from \"./CartItem\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { REMOVE_CART_ITEM } from \"../../Services/Cart/action-types\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\nimport \"./css/CartList.css\";\r\n\r\nconst CartList = ({ closeCart, show }) => {\r\n  const { cartItem, dispatch } = useContext(CartContext);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalCartItems, setTotalCartItems] = useState(0);\r\n  const calculateTotal = () => {\r\n    let totalAmount = 0;\r\n    let totalCart = 0;\r\n    cartItem.map((item) => {\r\n      totalAmount = totalAmount + item.count * parseFloat(item.productPrice);\r\n      totalCart = totalCart + item.count;\r\n    });\r\n    setTotalPrice(totalAmount);\r\n    setTotalCartItems(totalCart);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateTotal();\r\n  }, [cartItem]);\r\n\r\n  const removeFromCart = (item) => {\r\n    item.isAddedtoCart = false;\r\n    item.count = 0;\r\n    dispatch({\r\n      type: REMOVE_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const checkout = () => {\r\n    alert(\"Checkout: Subtotal â‚¹\" + totalPrice);\r\n  };\r\n  return (\r\n    <div className={show ? \"modal display-block\" : \"modal display-none\"}>\r\n      <div className=\"absolute right-3 top-6\">\r\n        <button onClick={() => closeCart()} className=\"focus:outline-none\">\r\n          <MdClose className=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"flex items-center justify-center py-4\">\r\n        <FaCartPlus className=\"w-8 h-8\" />{\" \"}\r\n        <span className=\"cart-count\">{totalCartItems}</span>\r\n        <h1 className=\"text-lg font-bold ml-2\">Cart</h1>\r\n      </div>\r\n      <ShowCartItems cartItem={cartItem} removeFromCart={removeFromCart} />\r\n      <CheckoutButton totalPrice={totalPrice} checkout={checkout} />\r\n    </div>\r\n  );\r\n};\r\nfunction CheckoutButton({ totalPrice, checkout }) {\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      <div className=\"flex place-content-between mb-5\">\r\n        <h1>Total</h1>{\" \"}\r\n        <p className=\"text-green-700 font-medium items-end text-xl\">\r\n          â‚¹{totalPrice}\r\n        </p>\r\n      </div>\r\n      <button className=\"checkout-btn btn-green\" onClick={() => checkout()}>\r\n        Checkout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nfunction ShowCartItems({ cartItem, removeFromCart }) {\r\n  return (\r\n    <div className=\"cart-container\">\r\n      {cartItem.length > 0 ? (\r\n        <div>\r\n          {cartItem.map((items) => (\r\n            <CartItem\r\n              cartObj={items}\r\n              key={items.id}\r\n              removeFromCart={removeFromCart}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"p-10 text-red-500 decoration-clone font-semibold\">\r\n          Your cart is empty\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./css/Product.css\";\r\nimport { FaMinusSquare, FaPlusSquare, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Product = ({\r\n  product,\r\n  addToCart,\r\n  removeFromCart,\r\n  incrementItem,\r\n  decrementItem,\r\n}) => {\r\n  const [productItem] = useState(product);\r\n\r\n  return (\r\n    <div className=\"shadow flex flex-col items-center p-3\">\r\n      <img alt=\"\" src={productItem.smallImage} className=\"w-64 h-48\" />\r\n      <p className=\"font-medium capitalize\">{productItem.productName}</p>\r\n      <p>â‚¹{productItem.productPrice}</p>\r\n      {productItem.isAddedtoCart ? (\r\n        <div className=\"flex grid-cols-2 gap-2 w-4/5\">\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              onClick={() => decrementItem(productItem)}\r\n              disabled={productItem.count <= 1}\r\n              className=\"disabled:opacity-50 disabled:cursor-text focus:outline-none\"\r\n            >\r\n              <FaMinusSquare className=\"w-5 h-5\" />{\" \"}\r\n            </button>\r\n            <span className=\"mx-2\">{productItem.count}</span>\r\n            {productItem.count >= 1 ? (\r\n              <button\r\n                onClick={() => incrementItem(productItem)}\r\n                className=\"focus:outline-none\"\r\n              >\r\n                <FaPlusSquare className=\"w-5 h-5\" />\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          <button\r\n            onClick={() => removeFromCart(productItem)}\r\n            className=\"btn btn-red\"\r\n          >\r\n            <FaTrashAlt />\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <AddToCartButton addToCart={addToCart} productItem={productItem} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction AddToCartButton({ addToCart, productItem }) {\r\n  return (\r\n    <button onClick={() => addToCart(productItem)} className=\"btn btn-green\">\r\n      Add to Cart\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import { createContext } from \"react\";\r\n\r\nexport const ProductContext = createContext();","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nimport { CartContext } from \"../../Services/Cart/CartContext\";\r\nimport {\r\n  ADD_CART_ITEM,\r\n  REMOVE_CART_ITEM,\r\n  UPDATE_CART_ITEM_COUNT,\r\n} from \"../../Services/Cart/action-types\";\r\nimport { ProductContext } from \"../../Services/Product/ProductContext\";\r\n\r\nimport { apiKey, productURL } from \"../../Services/util\";\r\nimport { random, commerce, datatype } from \"faker\";\r\nimport Axios from \"axios\";\r\n\r\nimport { FETCH_PRODUCTS } from \"../../Services/Product/action-types\";\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport \"./css/ProductList.css\";\r\nconst ProductList = () => {\r\n  const { cartItem, dispatch } = useContext(CartContext);\r\n  const { products, productDispatch } = useContext(ProductContext);\r\n  const fetchProducts = async () => {\r\n    const { data } = await Axios.get(productURL, {\r\n      headers: {\r\n        Authorization: apiKey,\r\n      },\r\n    });\r\n\r\n    const { photos } = data;\r\n\r\n    const allProduct = photos.map((photo) => ({\r\n      smallImage: photo.src.medium,\r\n      tinyImage: photo.src.tiny,\r\n      productName: random.word(),\r\n      productPrice: commerce.price(),\r\n      count: 0,\r\n      id: datatype.uuid(),\r\n      age: datatype.number(6),\r\n    }));\r\n    productDispatch({\r\n      type: FETCH_PRODUCTS,\r\n      payload: allProduct,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Cart item updated\");\r\n  }, [cartItem]);\r\n  const addToCart = (item) => {\r\n    item.isAddedtoCart = true;\r\n    item.count = 1;\r\n    dispatch({\r\n      type: ADD_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    item.isAddedtoCart = false;\r\n    item.count = 0;\r\n    dispatch({\r\n      type: REMOVE_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n  const incrementItem = (item) => {\r\n    item.isAddedtoCart = true;\r\n    if (item.count > 0) {\r\n      item.count = item.count + 1;\r\n    }\r\n    dispatch({\r\n      type: UPDATE_CART_ITEM_COUNT,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const decrementItem = (item) => {\r\n    item.isAddedtoCart = true;\r\n    if (item.count > 0) {\r\n      item.count = item.count - 1;\r\n    }\r\n    dispatch({\r\n      type: UPDATE_CART_ITEM_COUNT,\r\n      payload: item,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"grid lg:grid-cols-4 gap-4 md:grid-cols-3 sm:grid-cols-2 px-4\">\r\n        {products.items !== undefined ? (\r\n          products.items.map((item) => (\r\n            <Product\r\n              key={item.id}\r\n              product={item}\r\n              addToCart={addToCart}\r\n              removeFromCart={removeFromCart}\r\n              incrementItem={incrementItem}\r\n              decrementItem={decrementItem}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"spinner-container\">\r\n            <SyncLoader color=\"#10b981\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","export const productURL = \"https://api.pexels.com/v1/search?query=toys&per_page=8&page=1\";\r\nexport const apiKey = \"563492ad6f917000010000018f3e254bdba740aab8247cce67fb3648\";","import {\r\n  ADD_CART_ITEM,\r\n  REMOVE_CART_ITEM,\r\n  UPDATE_CART_ITEM_COUNT,\r\n} from \"./action-types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CART_ITEM:\r\n      return [...state, action.payload];\r\n    case REMOVE_CART_ITEM:\r\n      let currrentState = state.filter((item) => item.id !== action.payload.id);\r\n      return currrentState;\r\n    case UPDATE_CART_ITEM_COUNT:\r\n      var index = state.findIndex((x) => x.id === action.payload.id);\r\n      return [\r\n        ...state.slice(0, index),\r\n        Object.assign(state[index], action.payload),\r\n        ...state.slice(index + 1),\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { ProductContext } from \"../../Services/Product/ProductContext\";\r\nimport {FETCH_PRODUCTS} from \"../../Services/Product/action-types\";\r\n\r\nconst SortBy = () => {\r\n  const [sortValue, setSortValue] = useState();\r\n  const {products,productDispatch} = useContext(ProductContext);\r\n  const compare = {\r\n    lowestprice: (a, b) => {\r\n      if (parseInt(a.productPrice) < parseInt(b.productPrice)) return -1;\r\n      if (parseInt(a.productPrice) > parseInt(b.productPrice)) return 1;\r\n      return 0;\r\n    },\r\n    highestprice: (a, b) => {\r\n      if (parseInt(a.productPrice) > parseInt(b.productPrice)) return -1;\r\n      if (parseInt(a.productPrice) < parseInt(b.productPrice)) return 1;\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    products.items.sort(compare[event.target.value]);\r\n    setSortValue(event.target.value);\r\n    productDispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: products.items\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mr-10 mb-5\">\r\n      <label>Sort by:</label>\r\n      <select value={sortValue} onChange={(ev) => handleChange(ev)} className=\"border ml-2 p-2\">\r\n        <option value='1' disabled selected>Select</option>\r\n        <option value=\"lowestprice\">Lowest to Highest</option>\r\n        <option value=\"highestprice\">Highest to Lowest</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import { FETCH_PRODUCTS } from \"./action-types\";\r\n\r\nexport default (state = { items: null }, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return { ...state, items: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useReducer, useState, useEffect } from \"react\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\nimport \"./App.css\";\r\nimport CartList from \"./Components/Cart/CartList\";\r\nimport ProductList from \"./Components/Products/ProductList\";\r\nimport { CartContext } from \"./Services/Cart/CartContext\";\r\nimport CartReducer from \"./Services/Cart/reducer\";\r\nimport SortBy from \"./Components/SortBy/SortBy\";\r\nimport ProductReducer from \"./Services/Product/reducer\";\r\nimport { ProductContext } from \"./Services/Product/ProductContext\";\r\n\r\nfunction App() {\r\n  const [cartItem, dispatch] = useReducer(CartReducer, []);\r\n  const [products, productDispatch] = useReducer(ProductReducer, []);\r\n  const [cartModal, setCartModal] = useState({ show: false });\r\n  const [totalCartItems, setTotalCartItems] = useState(0);\r\n\r\n  const calculateCartItems = () => {\r\n    let totalCart  = cartItem.reduce((accumalator, current) => \r\n        accumalator + current.count\r\n    , 0);\r\n    setTotalCartItems(totalCart);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateCartItems();\r\n  }, [cartItem]);\r\n\r\n  return (\r\n    <ProductContext.Provider value={{ products, productDispatch }}>\r\n      <CartContext.Provider value={{ cartItem, dispatch }}>\r\n        <header className=\"p-2 mb-4 border-b-2\">\r\n          <h1 className=\"text-2xl font-bold font-serif\">Toy shop</h1>\r\n          <button\r\n            className=\"right-4 top-3 absolute focus:outline-none\"\r\n            onClick={() => setCartModal({ show: true })}\r\n          >\r\n            <FaCartPlus className=\"w-5 h-5\" />\r\n            <span className=\"cart-badge\">{totalCartItems}</span>\r\n          </button>\r\n        </header>\r\n        <div className=\"product-filter\">\r\n          <SortBy />\r\n        </div>\r\n        <ProductList />\r\n        <CartList\r\n          closeCart={() => setCartModal({ show: false })}\r\n          show={cartModal.show}\r\n        />\r\n      </CartContext.Provider>\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}